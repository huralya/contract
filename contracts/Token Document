
# Huralya Contract Documentation

## Overview

The Huralya contract is an ERC20 token implemented on the Ethereum blockchain. It features custom token minting and burning functionalities, adhering to the ERC20 standard with additional features for ownership management and minting control.

### Contract Details

- **Network**: Ethereum Mainnet
- **Solidity Version**: 0.8.23
- **Token Name**: Huralya
- **Token Symbol**: LYA
- **Decimal**: 6

### Dependencies

- OpenZeppelin's ERC20: Standard ERC20 implementation.
- OpenZeppelin's Ownable2Step: Enhanced ownership management.

### Tokenomics

- **Initial Supply**: 100,000,000 LYA (with 6 decimals)
- **Minting Interval**: Every 4 years
- **Total Supply Limit per 4 Years**: 100,000,000 LYA

#### Constructor

- Initializes the token with the name "Huralya" and symbol "LYA".
- Mints the total supply limit to the contract owner upon deployment.

#### Burn

- Allows token holders to burn their tokens, reducing the total supply.

#### Mint

- Restricted to the contract owner.
- Allows minting of new tokens up to a calculated limit, based on the time elapsed since deployment.

#### GetMintableAmount

- Calculates the maximum amount of tokens that can be minted at the current time.

#### Decimals

- Returns the number of decimals the token uses - 6.

### Ownership Management

- Utilizes `Ownable2Step` from OpenZeppelin for secure ownership transfer.

## Security Considerations

- Overflow checks are inherent due to the use of Solidity 0.8.23.
- Functions that change the state of the contract are limited to the contract owner, with the exception of the `burn` function.

more in: https://whitepaper.huralya.com/lya-huralya-games-token

